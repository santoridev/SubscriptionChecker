// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
  "swagger": "2.0",
  "info": {
    "description": "{{escape .Description}}",
    "title": "{{.Title}}",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Поддержка API",
      "email": "santoridev@gmail.com"
    },
    "version": "{{.Version}}"
  },
  "host": "{{.Host}}",
  "basePath": "{{.BasePath}}",
  "schemes": {{ marshal .Schemes }},
  "paths": {
    "/subs": {
      "get": {
        "summary": "Получить список всех подписок",
        "tags": ["subscriptions"],
        "responses": {
          "200": {
            "description": "Успешно",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subscription"
              }
            }
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      },
      "post": {
        "summary": "Добавить подписку",
        "tags": ["subscriptions"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Создано",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          },
          "400": {
            "description": "Неверные данные"
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      }
    },
    "/subs/{id}": {
      "get": {
        "summary": "Получить подписку по ID",
        "tags": ["subscriptions"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID подписки"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешно",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          },
          "404": {
            "description": "Не найдено"
          }
        }
      },
      "put": {
        "summary": "Обновить подписку",
        "tags": ["subscriptions"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешно обновлено",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          },
          "400": {
            "description": "Неверные данные"
          },
          "404": {
            "description": "Не найдено"
          }
        }
      },
      "delete": {
        "summary": "Удалить подписку",
        "tags": ["subscriptions"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID подписки"
          }
        ],
        "responses": {
          "200": {
            "description": "Подписка удалена"
          },
          "404": {
            "description": "Не найдено"
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      }
    },
    "/subs/summary": {
      "get": {
        "summary": "Получить сумму подписок по фильтрам",
        "tags": ["subscriptions"],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "UUID пользователя"
          },
          {
            "name": "service_name",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Название сервиса"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Дата начала в формате MM-YYYY"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Дата конца в формате MM-YYYY"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешно",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Неверный запрос"
          }
        }
      }
    }
  },
  "definitions": {
    "Subscription": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "service_name": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "start_date": {
          "type": "string",
          "example": "07-2025"
        },
        "end_date": {
          "type": "string",
          "example": "09-2025"
        }
      }
    },
    "SubscriptionInput": {
      "type": "object",
      "required": ["user_id", "service_name", "price", "start_date"],
      "properties": {
        "user_id": {
          "type": "string"
        },
        "service_name": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "start_date": {
          "type": "string",
          "example": "07-2025"
        },
        "end_date": {
          "type": "string",
          "example": "09-2025"
        }
      }
    }
  }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Subscription API",
	Description:      "API для управления подписками и подсчета их стоимости.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
